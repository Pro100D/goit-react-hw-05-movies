{"version":3,"file":"static/js/415.bf98b347.chunk.js","mappings":"iNAGaA,EAAkBC,EAAAA,EAAAA,GAAH,8JAYfC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sI,SCGvB,EAfkB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAACN,EAAD,CAAYO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAtD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,8ECGD,UAfa,WACX,OAAwBI,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAmBC,MAAK,SAAAJ,GAAI,OAAIC,EAAQD,EAAKK,QAAjB,GAC7B,GAAE,KAGD,4BACE,4CACA,SAAC,IAAD,CAAWhB,OAAQW,MAGxB,C,+LChBKM,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMJ,EAAgB,mCAAG,oGACPI,EAAAA,EAAAA,IAAA,mCAAsCD,IAD/B,cACxBE,EADwB,yBAGvBA,EAASR,MAHc,2CAAH,qDAMhBS,EAAa,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,EAAAA,IAAA,gBACZG,EADY,2CAC6BJ,IAFzB,cACrBE,EADqB,yBAKpBA,EAASR,MALW,2CAAH,sDAQbW,EAAoB,mCAAG,WAAMD,GAAN,uFACXH,EAAAA,EAAAA,IAAA,gBACZG,EADY,mCACqBJ,IAFV,cAC5BE,EAD4B,yBAK3BA,EAASR,MALkB,2CAAH,sDAQpBY,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,8CACkBD,EADlB,kBAC+BO,IAFvB,cACzBL,EADyB,yBAKxBA,EAASR,MALe,2CAAH,sDAQjBc,EAAY,mCAAG,WAAMJ,GAAN,uFACHH,EAAAA,EAAAA,IAAA,gBACZG,EADY,2CAC6BJ,IAF1B,cACpBE,EADoB,yBAKnBA,EAASR,MALU,2CAAH,qD","sources":["components/styledCss/MovieList.styled.jsx","components/MovieList.jsx","pages/Home.jsx","services/allFetchs.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListStyled = styled.ul`\n  margin: 0;\n  padding: 0;\n\n  margin-left: 30px;\n  list-style: none;\n\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n\n  font-size: 20px;\n\n  color: #000000;\n\n  &:hover {\n    color: #b564e7;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieListStyled, LinkStyled } from './styledCss/MovieList.styled';\n\nconst MovieList = ({ values }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListStyled>\n      {values.map(value => (\n        <li key={value.id}>\n          <LinkStyled to={`/movies/${value.id}`} state={{ from: location }}>\n            {value.title}\n          </LinkStyled>\n        </li>\n      ))}\n    </MovieListStyled>\n  );\n};\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { fetchAllTrenders } from '../services/allFetchs';\n\nimport MovieList from 'components/MovieList';\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    fetchAllTrenders().then(data => setData(data.results));\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending Today</h1>\n      <MovieList values={data} />\n    </div>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API = '5a45960aa9b19faa72924039862aa15f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchAllTrenders = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API}`);\n\n  return response.data;\n};\n\nexport const fetchCastFilm = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}/credits?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n\nexport const fetchDetailsInfoFilm = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmsOrQuery = async query => {\n  const response = await axios.get(\n    `search/movie?language=en-US&api_key=${API}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchReviews = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n"],"names":["MovieListStyled","styled","LinkStyled","Link","values","location","useLocation","map","value","to","id","state","from","title","useState","data","setData","useEffect","fetchAllTrenders","then","results","API","axios","response","fetchCastFilm","filmId","fetchDetailsInfoFilm","fetchFilmsOrQuery","query","fetchReviews"],"sourceRoot":""}