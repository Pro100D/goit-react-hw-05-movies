{"version":3,"file":"static/js/0.7db419c0.chunk.js","mappings":"yPAGaA,GAAyBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iLActBE,EAAwBF,EAAAA,EAAAA,IAAH,0CAIrBG,EAAcH,EAAAA,EAAAA,IAAH,8EAOXI,GAAaJ,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sI,SC+CvB,EAjEqB,WAAO,IAAD,EACzB,GAAsCK,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBH,GAASI,MAAK,SAAAC,GACjCV,EAAeU,GACfR,EAAUQ,EAAKT,OAChB,GACF,GAAE,CAACI,KAGF,4BACE,SAACb,EAAD,CAAwBmB,IAAY,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUS,aAAV,eAAiBC,OAAQ,IAArD,sBAGA,UAAClB,EAAD,YACE,0BACE,gBACEmB,MAAM,MACNC,IACEhB,EAAYiB,YAAZ,yCACsCjB,EAAYiB,aAC9C,8BAENC,IAAI,QAGR,4BACE,4BACE,wBAAKlB,EAAYmB,SACjB,sCAAcnB,EAAYoB,gBAE5B,4BACE,qCACA,SAACvB,EAAD,UACGK,EAAOmB,KAAI,SAAAC,GAAI,OACd,uBAAkBA,EAAKC,MAAfD,EAAKE,GADC,UAKpB,2BACE,yBACE,SAAC1B,EAAD,CAAYc,GAAG,OAAOC,MAAO,CAAEC,KAAMV,GAArC,qBAIF,yBACE,SAACN,EAAD,CAAYc,GAAG,UAAUC,MAAO,CAAEC,KAAMV,GAAxC,2BAMJ,SAAC,EAAAqB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,cAMX,C,+LCxEKC,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAgB,mCAAG,oGACPD,EAAAA,EAAAA,IAAA,mCAAsCD,IAD/B,cACxBG,EADwB,yBAGvBA,EAASnB,MAHc,2CAAH,qDAMhBoB,EAAa,mCAAG,WAAMC,GAAN,uFACJJ,EAAAA,EAAAA,IAAA,gBACZI,EADY,2CAC6BL,IAFzB,cACrBG,EADqB,yBAKpBA,EAASnB,MALW,2CAAH,sDAQbF,EAAoB,mCAAG,WAAMuB,GAAN,uFACXJ,EAAAA,EAAAA,IAAA,gBACZI,EADY,mCACqBL,IAFV,cAC5BG,EAD4B,yBAK3BA,EAASnB,MALkB,2CAAH,sDAQpBsB,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,8CACkBD,EADlB,kBAC+BO,IAFvB,cACzBJ,EADyB,yBAKxBA,EAASnB,MALe,2CAAH,sDAQjBwB,EAAY,mCAAG,WAAMH,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,gBACZI,EADY,2CAC6BL,IAF1B,cACpBG,EADoB,yBAKnBA,EAASnB,MALU,2CAAH,qD","sources":["pages/movie/MovieDetails.styled.jsx","pages/movie/MovieDetails.jsx","services/allFetchs.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsLinkStyled = styled(Link)`\n  font-size: 23px;\n\n  text-decoration: none;\n\n  color: #000000;\n\n  margin-bottom: 15px;\n  display: block;\n  &:hover {\n    color: #b564e7;\n  }\n`;\n\nexport const FlexBlockMovieDetails = styled.div`\n  display: flex;\n`;\n\nexport const GanresBlock = styled.div`\n  display: flex;\n\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n\n  font-size: 20px;\n\n  color: #000000;\n\n  &:hover {\n    color: #b564e7;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchDetailsInfoFilm } from '../../services/allFetchs';\nimport {\n  MovieDetailsLinkStyled,\n  FlexBlockMovieDetails,\n  GanresBlock,\n  LinkStyled,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchDetailsInfoFilm(movieId).then(data => {\n      setFilmDetails(data);\n      setGenres(data.genres);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieDetailsLinkStyled to={location?.state?.from || '/'}>\n        Go Back\n      </MovieDetailsLinkStyled>\n      <FlexBlockMovieDetails>\n        <div>\n          <img\n            width=\"500\"\n            src={\n              filmDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${filmDetails.poster_path}`\n                : 'http://placehold.it/640x70/'\n            }\n            alt=\"\"\n          />\n        </div>\n        <div>\n          <div>\n            <h1>{filmDetails.title}</h1>\n            <p>Overview: {filmDetails.overview}</p>\n          </div>\n          <div>\n            <h2>Ganres:</h2>\n            <GanresBlock>\n              {genres.map(genr => (\n                <p key={genr.id}>{genr.name}</p>\n              ))}\n            </GanresBlock>\n          </div>\n          <ul>\n            <li>\n              <LinkStyled to=\"cast\" state={{ from: location }}>\n                Cast\n              </LinkStyled>\n            </li>\n            <li>\n              <LinkStyled to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </LinkStyled>\n            </li>\n          </ul>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </FlexBlockMovieDetails>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API = '5a45960aa9b19faa72924039862aa15f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchAllTrenders = async () => {\n  const response = await axios.get(`trending/all/day?api_key=${API}`);\n\n  return response.data;\n};\n\nexport const fetchCastFilm = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}/credits?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n\nexport const fetchDetailsInfoFilm = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n\nexport const fetchFilmsOrQuery = async query => {\n  const response = await axios.get(\n    `search/movie?language=en-US&api_key=${API}&query=${query}`\n  );\n\n  return response.data;\n};\n\nexport const fetchReviews = async filmId => {\n  const response = await axios.get(\n    `movie/${filmId}/reviews?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n"],"names":["MovieDetailsLinkStyled","styled","Link","FlexBlockMovieDetails","GanresBlock","LinkStyled","useState","filmDetails","setFilmDetails","genres","setGenres","location","useLocation","movieId","useParams","useEffect","fetchDetailsInfoFilm","then","data","to","state","from","width","src","poster_path","alt","title","overview","map","genr","name","id","Suspense","fallback","API","axios","fetchAllTrenders","response","fetchCastFilm","filmId","fetchFilmsOrQuery","query","fetchReviews"],"sourceRoot":""}