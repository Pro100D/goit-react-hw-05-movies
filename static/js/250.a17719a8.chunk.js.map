{"version":3,"file":"static/js/250.a17719a8.chunk.js","mappings":"sPAIAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAClB,I,QAAMC,EAAoB,mCAAG,WAAMC,GAAN,uFACXF,EAAAA,EAAAA,IAAA,6CACiBE,EADjB,mCAJb,qCAGwB,cAC5BC,EAD4B,yBAK3BA,EAASC,MALkB,2CAAH,sD,0BCFpBC,GAAyBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,iLActBE,EAAwBF,EAAAA,EAAAA,IAAH,0CAIrBG,EAAcH,EAAAA,EAAAA,IAAH,8EAOXI,GAAaJ,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,sI,SC+CvB,EAjEqB,WAAO,IAAD,EACzB,GAAsCK,EAAAA,EAAAA,UAAS,CAAC,GAAhD,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,WACRnB,EAAqBiB,GAASG,MAAK,SAAAjB,GACjCS,EAAeT,GACfW,EAAUX,EAAKU,OAChB,GACF,GAAE,CAACI,KAGF,4BACE,SAACb,EAAD,CAAwBiB,IAAY,OAARN,QAAQ,IAARA,GAAA,UAAAA,EAAUO,aAAV,eAAiBC,OAAQ,IAArD,sBAGA,UAAChB,EAAD,YACE,0BACE,gBACEiB,MAAM,MACNC,IACEd,EAAYe,YAAZ,yCACsCf,EAAYe,aAC9C,8BAENC,IAAI,QAGR,4BACE,4BACE,wBAAKhB,EAAYiB,SACjB,sCAAcjB,EAAYkB,gBAE5B,4BACE,qCACA,SAACrB,EAAD,UACGK,EAAOiB,KAAI,SAAAC,GAAI,OACd,uBAAkBA,EAAKC,MAAfD,EAAKE,GADC,UAKpB,2BACE,yBACE,SAACxB,EAAD,CAAYY,GAAG,OAAOC,MAAO,CAAEC,KAAMR,GAArC,qBAIF,yBACE,SAACN,EAAD,CAAYY,GAAG,UAAUC,MAAO,CAAEC,KAAMR,GAAxC,2BAMJ,SAAC,EAAAmB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,cAMX,C","sources":["services/fetchDetailsInfoFilm.js","pages/MovieDetails.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API = '5a45960aa9b19faa72924039862aa15f';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nexport const fetchDetailsInfoFilm = async filmId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${filmId}?language=en-US&api_key=${API}`\n  );\n\n  return response.data;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsLinkStyled = styled(Link)`\n  font-size: 23px;\n\n  text-decoration: none;\n\n  color: #000000;\n\n  margin-bottom: 15px;\n  display: block;\n  &:hover {\n    color: #b564e7;\n  }\n`;\n\nexport const FlexBlockMovieDetails = styled.div`\n  display: flex;\n`;\n\nexport const GanresBlock = styled.div`\n  display: flex;\n\n  gap: 10px;\n  font-size: 18px;\n`;\n\nexport const LinkStyled = styled(Link)`\n  text-decoration: none;\n\n  font-size: 20px;\n\n  color: #000000;\n\n  &:hover {\n    color: #b564e7;\n  }\n`;\n","import { Suspense, useEffect, useState } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { fetchDetailsInfoFilm } from '../services/fetchDetailsInfoFilm';\nimport {\n  MovieDetailsLinkStyled,\n  FlexBlockMovieDetails,\n  GanresBlock,\n  LinkStyled,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState({});\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchDetailsInfoFilm(movieId).then(data => {\n      setFilmDetails(data);\n      setGenres(data.genres);\n    });\n  }, [movieId]);\n\n  return (\n    <div>\n      <MovieDetailsLinkStyled to={location?.state?.from || '/'}>\n        Go Back\n      </MovieDetailsLinkStyled>\n      <FlexBlockMovieDetails>\n        <div>\n          <img\n            width=\"500\"\n            src={\n              filmDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${filmDetails.poster_path}`\n                : 'http://placehold.it/640x70/'\n            }\n            alt=\"\"\n          />\n        </div>\n        <div>\n          <div>\n            <h1>{filmDetails.title}</h1>\n            <p>Overview: {filmDetails.overview}</p>\n          </div>\n          <div>\n            <h2>Ganres:</h2>\n            <GanresBlock>\n              {genres.map(genr => (\n                <p key={genr.id}>{genr.name}</p>\n              ))}\n            </GanresBlock>\n          </div>\n          <ul>\n            <li>\n              <LinkStyled to=\"cast\" state={{ from: location }}>\n                Cast\n              </LinkStyled>\n            </li>\n            <li>\n              <LinkStyled to=\"reviews\" state={{ from: location }}>\n                Reviews\n              </LinkStyled>\n            </li>\n          </ul>\n\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </FlexBlockMovieDetails>\n    </div>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","fetchDetailsInfoFilm","filmId","response","data","MovieDetailsLinkStyled","styled","Link","FlexBlockMovieDetails","GanresBlock","LinkStyled","useState","filmDetails","setFilmDetails","genres","setGenres","location","useLocation","movieId","useParams","useEffect","then","to","state","from","width","src","poster_path","alt","title","overview","map","genr","name","id","Suspense","fallback"],"sourceRoot":""}